<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 可以扫描controller、service、...
	这里让扫描controller，指定controller的包
	 -->
    <context:component-scan base-package="com.cose.easywu.controller"></context:component-scan>

    <!-- 静态资源解析
     包括：js、css、img、..
     直接使用<mvc:default-servlet-handler></mvc:default-servlet-handler>可不用配置此项
     -->
    <!--<mvc:resources mapping="/js/**" location="/js/"/>-->
    <!--<mvc:resources mapping="/img/**" location="/img/"/>-->

    <!-- 使用mvc:annotation-driven代替上面两个注解映射器和注解适配的配置
     mvc:annotation-driven默认加载很多的参数绑定方法，
     比如json转换解析器默认加载了，如果使用mvc:annotation-driven则不用配置上面的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
     实际开发时使用mvc:annotation-driven
     -->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>
    <mvc:annotation-driven></mvc:annotation-driven>
    <!--<mvc:annotation-driven conversion-service="conversionService"-->
        <!--validator="validator"></mvc:annotation-driven>-->

    <!-- 视图解析器
    解析jsp,默认使用jstl,classpath下要有jstl的包
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 配置jsp路径的前缀 -->
        <property name="prefix" value="/WEB-INF/pages/"/>
        <!-- 配置jsp路径的后缀 -->
        <property name="suffix" value=".html"/>
    </bean>

    <!-- 校验器 -->
    <!--<bean id="validator"-->
          <!--class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">-->
        <!--&lt;!&ndash; hibernate校验器&ndash;&gt;-->
        <!--<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>-->
        <!--&lt;!&ndash; 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties &ndash;&gt;-->
        <!--<property name="validationMessageSource" ref="messageSource"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash; 校验错误信息配置文件 &ndash;&gt;-->
    <!--<bean id="messageSource"-->
          <!--class="org.springframework.context.support.ReloadableResourceBundleMessageSource">-->
        <!--&lt;!&ndash; 资源文件名&ndash;&gt;-->
        <!--<property name="basenames">-->
            <!--<list>-->
                <!--<value>classpath:CustomValidationMessages</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--&lt;!&ndash; 资源文件编码格式 &ndash;&gt;-->
        <!--<property name="fileEncodings" value="utf-8"/>-->
        <!--&lt;!&ndash; 对资源文件内容缓存时间，单位秒 &ndash;&gt;-->
        <!--<property name="cacheSeconds" value="120"/>-->
    <!--</bean>-->

    <!-- 全局异常处理器
     只要实现HandlerExceptionResolver接口就是全局异常处理器，只能有一个全局异常处理器
     -->
    <!--<bean class="com.cose.ssm.exception.ExceptionResolver"></bean>-->

    <!-- 文件上传 -->
    <!--<bean id="multipartResolver"-->
          <!--class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
        <!--&lt;!&ndash; 设置上传文件的最大尺寸为5MB &ndash;&gt;-->
        <!--<property name="maxUploadSize">-->
            <!--<value>5242880</value>-->
        <!--</property>-->
    <!--</bean>-->

    <!--拦截器 -->
    <!--<mvc:interceptors>-->
        <!--&lt;!&ndash;多个拦截器,顺序执行 &ndash;&gt;-->
        <!--&lt;!&ndash; 登录认证拦截器 &ndash;&gt;-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<bean class="cose.ssm.interceptor.LoginInterceptor"></bean>-->
        <!--</mvc:interceptor>-->
        <!--<mvc:interceptor>-->
            <!--&lt;!&ndash; /**表示所有url包括子url路径 &ndash;&gt;-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<bean class="cose.ssm.interceptor.HandlerInterceptor1"></bean>-->
        <!--</mvc:interceptor>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<bean class="cose.ssm.interceptor.HandlerInterceptor2"></bean>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

</beans>